services:
  rubens_blog:
    restart: always
    build: ./rubens_blog
    networks:
      - proxy
    expose:
      - "8000"
    links:
      - postgres:postgres
    volumes:
      - rubens_blog-django:/app
      - rubens_blog-static:/app/static
    env_file: .env_production
    environment:
      DEBUG: 'true'
    command: /usr/local/bin/gunicorn rubens_blog.wsgi -w 2 -b 127.0.0.1:8000
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.constraint-label=proxy

      - traefik.http.services.rubens_blog.loadbalancer.server.port=80

      - traefik.http.routers.rubens_blog-http.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.rubens_blog-http.entrypoints=http

      - traefik.http.routers.rubens_blog-https.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.rubens_blog-https.entrypoints=https
      - traefik.http.routers.rubens_blog-https.tls=true
      - traefik.http.routers.rubens_blog-https.tls.certresolver=myresolver

  postgres:
    restart: always
    image: postgres:15.6
    shm_size: 128mb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data/
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    env_file:
      - .env_production

  traefik:
    image: traefik:v3.0
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
      #- /var/log:/var/log
    command:
      - --api.dashboard=true
      - --log.level=INFO
      #- --log.filepath=/var/log/traefik.log
      - --accesslog=true
      #- --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # remove next line when using Traefik v2
      # - --entrypoints.websecure.asDefault=true 
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=devrubenv@gmail.com
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.rubenvoss.de`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.rule=Host(`whoami.rubenvoss.de`) || Host(`www.whoami.rubenvoss.de`)
      - traefik.http.services.mywhoami.loadbalancer.server.port=80

      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mywhoami.middlewares=mywwwredirect

networks:
  proxy:
    name: proxy

volumes:
  rubens_blog-django:
  rubens_blog-static:
  pgdata:
  letsencrypt:
    name: letsencrypt