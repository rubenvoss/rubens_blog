services:
  db:
    # We use a mariadb image which supports both amd64 & arm64 architecture
    image: mariadb:11.4.2-noble
    # If you really want to use MySQL, uncomment the following line
    #image: mysql:8.0.27
    command: '--default-authentication-plugin=mysql_native_password'
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=somewordpress
      - MYSQL_DATABASE=wordpress
      - MYSQL_USER=wordpress
      - MYSQL_PASSWORD=wordpress
    expose:
      - 3306
      - 33060
    networks:
      - proxy

  wordpress:
    image: wordpress:latest
    volumes:
      - wp_data:/var/www/html
    # ports:
    #   - "8000"
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db
      - WORDPRESS_DB_USER=wordpress
      - WORDPRESS_DB_PASSWORD=wordpress
      - WORDPRESS_DB_NAME=wordpress
    labels:
      - traefik.enable=true
      - traefik.http.routers.wordpress.rule=Host(`rubenvoss.de`) || Host(`www.rubenvoss.de`)
      # - traefik.http.services.wordpress.loadbalancer.server.port=8000

      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.wordpress.middlewares=mywwwredirect
    networks:
      - proxy
    hostname: rubenvoss.de

  # rubens_blog:
  #   container_name: rubens_blog
  #   restart: always
  #   build: ./rubens_blog
  #   # ports:
  #   #   - "8000:8000"
  #   # expose:
  #   #   - 8000
  #   links:
  #     - postgres:postgres
  #   volumes:
  #     - ./rubens_blog/:/app
  #     - /srv/www/static/:/srv/www/static/
  #     - /etc/letsencrypt/live/rubenvoss.de/fullchain.pem:/etc/letsencrypt/live/rubenvoss.de/fullchain.pem
  #     - /etc/letsencrypt/live/rubenvoss.de/privkey.pem:/etc/letsencrypt/live/rubenvoss.de/privkey.pem
  #   env_file: .env_production
  #   # command: sh -c "python3 manage.py makemigrations && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && gunicorn --config gunicorn_config.py rubens_blog.wsgi"
  #   command: /usr/local/bin/gunicorn --config gunicorn_config.py rubens_blog.wsgi
  #   networks:
  #     - proxy
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.rubens_blog.rule=Host(`rubenvoss.de`) || Host(`www.rubenvoss.de`)
  #     - traefik.http.services.rubens_blog.loadbalancer.server.port=8000

  #     - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
  #     - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
  #     - traefik.http.routers.rubens_blog.middlewares=mywwwredirect

  # postgres:
  #   container_name: postgres
  #   restart: always
  #   image: postgres:15.6
  #   shm_size: 128mb
  #   expose:
  #     - "5432"
  #   volumes:
  #     - pgdata:/var/lib/postgresql/data/
  #     - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
  #   env_file:
  #     - .env_production
  #   networks:
  #     - proxy


  traefik:
    image: traefik:v3.0.3
    ports:
      - 80:80
      - 443:443
    networks:
      - proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - letsencrypt:/letsencrypt
      #- /var/log:/var/log
    command:
      - --api.dashboard=true
      - --log.level=INFO
      #- --log.filepath=/var/log/traefik.log
      - --accesslog=true
      #- --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=proxy
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # remove next line when using Traefik v2
      - --entrypoints.websecure.asDefault=true 
      - --entrypoints.websecure.http.tls.certresolver=rubens_resolver
      - --certificatesresolvers.rubens_resolver.acme.email=devrubenv@gmail.com
      - --certificatesresolvers.rubens_resolver.acme.tlschallenge=true
      - --certificatesresolvers.rubens_resolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.rubenvoss.de`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  whoami:
    image: traefik/whoami:v1.8
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.mywhoami.rule=Host(`whoami.rubenvoss.de`) || Host(`www.whoami.rubenvoss.de`)
      - traefik.http.services.mywhoami.loadbalancer.server.port=80

      - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
      - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
      - traefik.http.routers.mywhoami.middlewares=mywwwredirect

networks:
  proxy:
    name: proxy

volumes:
  # pgdata:
  letsencrypt:
    name: letsencrypt
  db_data:
  wp_data: